<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.fuyao.example</groupId>
  <artifactId>demo_2</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>demo_2</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <profiles>
        <profile>
            <id>test</id>
            <properties>
                <env>test</env><!--相当于定义一个变量 供下面使用-->
                <myName>张三</myName><!--使用一个properties文件中未定义，但是其他地方会取值的变量-->
            </properties>
            <activation><!--默认激活-->
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>dev</id>
            <properties>
                <env>dev</env>
                <myName>李四</myName>
            </properties>
            <activation><!--默认激活-->
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>product</id>
            <properties>
                <env>product</env>
            </properties>
        </profile>
    </profiles>
  <build>
    <finalName>mavenImparityProfile</finalName>
      <filters><!--获得过滤使用的源文件  即有实际数据的地反-->
          <filter>src/main/resources/properties/${env}.properties</filter>
      </filters>

      <!-- 指定 src/main/resources下所有文件及文件夹为资源文件 -->
      <resources>
        <resource>
            <directory>src/main/resources</directory>
             <filtering>true</filtering> <!--是否使用过滤器-->
         </resource>
          <!-- 第二中方式 设置对dev.properties，等进行过虑，即这些文件中的${key}会被替换掉为真正的值-->
          <!-- <resource>
              <directory>src/main/resources/properties/properties</directory>&lt;!&ndash;一定要指向上层目录&ndash;&gt;
              <includes>
                  &lt;!&ndash;要遍历出来文件都必须写&ndash;&gt;
                  <include>product.properties</include>
                  <include>test.properties</include>
                  <include>dev.properties</include>
                  <include>db.properties</include>
              </includes>
              <filtering>true</filtering>
          </resource>-->
     </resources>
  </build>
</project>
